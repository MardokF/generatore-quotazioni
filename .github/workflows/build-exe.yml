# .github/workflows/build-exe.yml
# Workflow per compilare automaticamente l'EXE online

name: 🚀 Build Windows EXE

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Permette di avviare manualmente

jobs:
  build-windows:
    runs-on: windows-2019  # Usa Windows Server 2019 per compatibilità
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10.11'  # Versione stabile specifica
        
    - name: 🧹 Clean Python Cache
      run: |
        python -m pip cache purge
        
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel
        pip install pyinstaller==5.13.2 openpyxl==3.1.2
        
    - name: 🔍 Verify Installation
      run: |
        python --version
        pip list
        
    - name: 🔨 Build EXE with PyInstaller (Enhanced)
      run: |
        pyinstaller --onefile --windowed --name="GeneratoreQuotazioni" --clean --noconfirm --add-data "*.py;." quotation_generator.py
      continue-on-error: true
      
    - name: 🔨 Build EXE (Alternative method)
      if: failure()
      run: |
        python -m PyInstaller --onefile --noconsole --name="GeneratoreQuotazioni" --distpath=dist --workpath=build --specpath=. quotation_generator.py
      continue-on-error: true
        
    - name: 🔨 Build EXE (Compatibility mode)
      if: failure()
      run: |
        pyinstaller --onefile --console --name="GeneratoreQuotazioni_Debug" quotation_generator.py
        
    - name: 📂 List Build Output
      run: |
        dir dist
        Get-ChildItem -Path "dist" -Recurse | Format-Table Name, Length, LastWriteTime
        
    - name: 🧪 Test EXE (Quick validation)
      run: |
        if (Test-Path "dist/GeneratoreQuotazioni.exe") {
          Write-Output "✅ EXE created successfully"
          Get-ItemProperty "dist/GeneratoreQuotazioni.exe" | Select-Object Name, Length, VersionInfo
        } else {
          Write-Output "❌ EXE not found"
        }
        
    - name: 🎯 Upload EXE Artifact
      uses: actions/upload-artifact@v4
      with:
        name: GeneratoreQuotazioni-Windows-Compatible
        path: |
          dist/*.exe
          build/GeneratoreQuotazioni/warn-GeneratoreQuotazioni.txt
        retention-days: 30
        if-no-files-found: warn
        
    - name: 🎯 Upload Debug Version (if exists)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: GeneratoreQuotazioni-Debug
        path: dist/GeneratoreQuotazioni_Debug.exe
        retention-days: 7
        if-no-files-found: ignore
        
    - name: 📊 Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/GeneratoreQuotazioni.exe
          dist/GeneratoreQuotazioni_Debug.exe
        name: Release ${{ github.ref_name }}
        body: |
          🚀 **Generatore Quotazioni Progetti v${{ github.ref_name }}**
          
          📥 **Download**:
          - `GeneratoreQuotazioni.exe` - Versione principale (senza console)
          - `GeneratoreQuotazioni_Debug.exe` - Versione debug (con console per errori)
          
          ✅ **Caratteristiche**:
          - Interfaccia desktop completa
          - Baseline multiple configurabili
          - Generazione Excel con formule e grafici
          - 4 architetture predefinite
          - Salvataggio/caricamento configurazioni
          
          📋 **Requisiti**: Windows 10/11
          🔧 **Compatibilità**: Compilato su Windows Server 2019
          
          ⚠️ **Se hai problemi**: Prova la versione Debug per vedere gli errori
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
